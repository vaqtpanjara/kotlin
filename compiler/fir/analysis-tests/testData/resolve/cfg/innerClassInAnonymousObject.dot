digraph innerClassInAnonymousObject_kt {
    graph [nodesep=3]
    node [shape=box penwidth=2]
    edge [penwidth=2]

    subgraph cluster_0 {
        color=red
        0 [label="Enter function <init>" style="filled" fillcolor=red];
        2 [label="Delegated constructor call: super<R|kotlin/Any|>()"];
        1 [label="Exit function <init>" style="filled" fillcolor=red];
    }
    0 -> {2};
    2 -> {1};

    subgraph cluster_1 {
        color=red
        3 [label="Enter function <init>" style="filled" fillcolor=red];
        5 [label="Delegated constructor call: super<R|kotlin/Any|>()"];
        4 [label="Exit function <init>" style="filled" fillcolor=red];
    }
    3 -> {5};
    5 -> {4};

    subgraph cluster_2 {
        color=red
        6 [label="Enter function foo" style="filled" fillcolor=red];
        subgraph cluster_3 {
            color=blue
            8 [label="Enter block"];
            9 [label="Exit block"];
        }
        7 [label="Exit function foo" style="filled" fillcolor=red];
    }
    6 -> {8};
    8 -> {9};
    9 -> {7};

    subgraph cluster_4 {
        color=red
        11 [label="Enter class Nested" style="filled" fillcolor=red];
        10 [label="Exit class Nested" style="filled" fillcolor=red];
    }
    11 -> {10} [color=green];

    subgraph cluster_5 {
        color=red
        14 [label="Enter function getter" style="filled" fillcolor=red];
        15 [label="Exit function getter" style="filled" fillcolor=red];
    }
    14 -> {15};

    subgraph cluster_6 {
        color=red
        16 [label="Enter property" style="filled" fillcolor=red];
        subgraph cluster_7 {
            color=blue
            13 [label="Enter class <anonymous object>" style="filled" fillcolor=red];
            12 [label="Exit class <anonymous object>" style="filled" fillcolor=red];
        }
        18 [label="Exit anonymous object"];
        17 [label="Exit property" style="filled" fillcolor=red];
    }
    16 -> {18};
    16 -> {0 3 6} [color=red];
    18 -> {17};
    13 -> {12} [color=green];

}
